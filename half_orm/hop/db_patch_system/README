# hop patch system

In a hop package directory, type the command `hop -p` to apply a new patch.

If you've never applied any patch, and no new patch has been prepared, you'll
get:

```
08:49 $ hop -p
LAST RELEASE: 0.0.0 at 16:48:52+02:00
Trying 0.0.1
Trying 0.1.0
Trying 1.0.0
No patch to apply!
```

* `LAST RELEASE` indicates the last patch applied. Here, we are on a newly
  installed package with `hop -c`, hence the 0.0.0 release.


The patch system will try to find a next suitable patch to apply from the
last release number. If the last patch is X.Y.Z, `hop -p` will try
X.Y.<Z+1>, X.<Y+1>.Z, <X+1>.Y.Z in order.


To create a X.Y.Z patch, just create a directory Patches/X/Y/Z. In it you'll
have to add a CHANGELOG.md description file with a series of patches scripts.
The scripts are applied in alphabetical order and can only be of two types:

* SQL with .sql extension
* Python with .py extension
